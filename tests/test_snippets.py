'''
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
DO NOT EDIT THIS FILE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'''

import io
from unittest import mock, TestCase

from snippets import snippet_1, snippet_2, snippet_3, snippet_4, snippet_5


class TestSnippetDebugging(TestCase):

    @mock.patch('sys.stdout', new_callable=io.StringIO)
    def test_snippet_1(self, mock_stdout):
        snippet_1()

        self.assertEqual("The product of u (5) and v (2) is 10\n", mock_stdout.getvalue())

    @mock.patch('sys.stdout', new_callable=io.StringIO)
    def test_snippet_2(self, mock_stdout):
        snippet_2()

        self.assertEqual("z is greater than y\n", mock_stdout.getvalue())

    @mock.patch('sys.stdout', new_callable=io.StringIO)
    def test_snippet_3(self, mock_stdout):
        snippet_3()

        self.assertEqual(
            "The value of c (True) is True since a (1) is equal to b (1).\n",
            mock_stdout.getvalue()
        )

    @mock.patch('sys.stdout', new_callable=io.StringIO)
    def test_snippet_4(self, mock_stdout):
        snippet_4()

        # Instructions say to use a comment, not a print statement
        self.assertEqual('', mock_stdout.getvalue())

    @mock.patch('sys.stdout', new_callable=io.StringIO)
    def test_snippet_5(self, mock_stdout):
        snippet_5()

        self.assertEqual(
            "The value of o (True) is True since Python is case-sensitive.\n",
            mock_stdout.getvalue()
        )